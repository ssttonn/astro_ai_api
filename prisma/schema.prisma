// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
  NOT_SPECIFIED
}

model User {
  id          Int           @id @default(autoincrement()) @map("id")
  email       String        @unique @map("email") @db.VarChar(63)
  firstName   String        @map("first_name") @db.VarChar(63)
  lastName    String        @map("last_name") @db.VarChar(63)
  username    String        @map("username") @db.VarChar(63)
  bio         String?       @map("bio") @db.Text
  avatar      String?       @map("avatar") @db.Text
  gender      Gender        @default(NOT_SPECIFIED) @map("gender")
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @default(now()) @updatedAt @map("updated_at")
  LoginMethod LoginMethod[]

  @@index([email], name: "email")
  @@index([username], name: "username")
  @@index([createdAt], name: "created_at")
  @@index([updatedAt], name: "updated_at")
  @@index([id], name: "id")
}

enum LoginMethodType {
  EMAIL
  GOOGLE
  FACEBOOK
  TWITTER
  GITHUB
}

model LoginMethod {
  id         Int             @id @default(autoincrement()) @map("id")
  userId     Int             @map("user_id")
  email      String          @default("") @map("email") @db.VarChar(63)
  method     LoginMethodType @map("method")
  identifier String          @map("key") @db.VarChar(100)
  createdAt  DateTime        @default(now()) @map("created_at")
  updatedAt  DateTime        @default(now()) @updatedAt @map("updated_at")

  User User @relation(fields: [userId], references: [id])

  @@index([userId], name: "user_id")
  @@index([method], name: "method")
  @@index([identifier], name: "key")
}
